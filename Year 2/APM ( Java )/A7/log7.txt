ID: 6
Execution stack:
RefType IntegerType v
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 6
Execution stack:
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 6
Execution stack:
new(v, 20)
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 6
Execution stack:
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
RefType RefType IntegerType a
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
new(a, v)
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 6
Execution stack:
new(v, 30)
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 6
Execution stack:
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 6
Execution stack:
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 6
Execution stack:
RefType IntegerType v
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 6
Execution stack:
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 6
Execution stack:
new(v, 20)
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 6
Execution stack:
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
RefType RefType IntegerType a
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
new(a, v)
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 6
Execution stack:
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 6
Execution stack:
new(v, 30)
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 6
Execution stack:
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 6
Execution stack:
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

