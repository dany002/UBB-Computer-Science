ID: 0
Execution stack:
IntegerType v; v = 2; print(v)
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
IntegerType v
v = 2; print(v)
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 2; print(v)
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 2
print(v)
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
print(v)
SymTable: 
v(IntegerType):-> 2
Output:
Filetable:
Heap:

ID: 0
Execution stack:
SymTable: 
v(IntegerType):-> 2
Output: 2
Filetable:
Heap:

ID: 1
Execution stack:
IntegerType a; a = (2 + (3 * 5)); IntegerType b; b = ((a - (4 / 2)) + 7); print(b)
SymTable:
Output:
Filetable:
Heap:

ID: 1
Execution stack:
IntegerType a
a = (2 + (3 * 5)); IntegerType b; b = ((a - (4 / 2)) + 7); print(b)
SymTable:
Output:
Filetable:
Heap:

ID: 1
Execution stack:
a = (2 + (3 * 5)); IntegerType b; b = ((a - (4 / 2)) + 7); print(b)
SymTable: 
a(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 1
Execution stack:
a = (2 + (3 * 5))
IntegerType b; b = ((a - (4 / 2)) + 7); print(b)
SymTable: 
a(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 1
Execution stack:
IntegerType b; b = ((a - (4 / 2)) + 7); print(b)
SymTable: 
a(IntegerType):-> 17
Output:
Filetable:
Heap:

ID: 1
Execution stack:
IntegerType b
b = ((a - (4 / 2)) + 7); print(b)
SymTable: 
a(IntegerType):-> 17
Output:
Filetable:
Heap:

ID: 1
Execution stack:
b = ((a - (4 / 2)) + 7); print(b)
SymTable: 
a(IntegerType):-> 17
b(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 1
Execution stack:
b = ((a - (4 / 2)) + 7)
print(b)
SymTable: 
a(IntegerType):-> 17
b(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 1
Execution stack:
print(b)
SymTable: 
a(IntegerType):-> 17
b(IntegerType):-> 22
Output:
Filetable:
Heap:

ID: 1
Execution stack:
SymTable: 
a(IntegerType):-> 17
b(IntegerType):-> 22
Output: 22
Filetable:
Heap:

ID: 2
Execution stack:
IntegerType v; v = 2; print(v)
SymTable:
Output:
Filetable:
Heap:

ID: 2
Execution stack:
IntegerType v
v = 2; print(v)
SymTable:
Output:
Filetable:
Heap:

ID: 2
Execution stack:
v = 2; print(v)
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 2
Execution stack:
v = 2
print(v)
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 2
Execution stack:
print(v)
SymTable: 
v(IntegerType):-> 2
Output:
Filetable:
Heap:

ID: 2
Execution stack:
SymTable: 
v(IntegerType):-> 2
Output: 2
Filetable:
Heap:

ID: 3
Execution stack:
RefType IntegerType v; new(v, 20); print(readHeap(v)); WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable:
Output:
Filetable:
Heap:

ID: 3
Execution stack:
RefType IntegerType v
new(v, 20); print(readHeap(v)); WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable:
Output:
Filetable:
Heap:

ID: 3
Execution stack:
new(v, 20); print(readHeap(v)); WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 3
Execution stack:
new(v, 20)
print(readHeap(v)); WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 3
Execution stack:
print(readHeap(v)); WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 3
Execution stack:
print(readHeap(v))
WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 3
Execution stack:
WriteHeap(v, 30); print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 20

ID: 3
Execution stack:
WriteHeap(v, 30)
print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 20

ID: 3
Execution stack:
print((readHeap(v) + 5))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 30

ID: 3
Execution stack:
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output: 20 35
Filetable:
Heap:
1(IntegerType):-> 30

ID: 4
Execution stack:
RefType IntegerType v; new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 4
Execution stack:
RefType IntegerType v
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 4
Execution stack:
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 4
Execution stack:
new(v, 20)
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 4
Execution stack:
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 4
Execution stack:
RefType RefType IntegerType a
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 4
Execution stack:
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 4
Execution stack:
new(a, v)
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 4
Execution stack:
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 4
Execution stack:
new(v, 30)
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 4
Execution stack:
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 4
Execution stack:
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 0
Execution stack:
RefType IntegerType v; new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType v
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(v, 20)
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
RefType RefType IntegerType a
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
RefType IntegerType v; new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType v
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(v, 20); RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(v, 20)
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(0,IntegerType)
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType RefType IntegerType a; new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
RefType RefType IntegerType a
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
new(a, v); new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
new(a, v)
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(0,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20

ID: 0
Execution stack:
new(v, 30); print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 0
Execution stack:
new(v, 30)
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(1,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)

ID: 0
Execution stack:
print(readHeap(readHeap(a)))
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output:
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 0
Execution stack:
SymTable: 
a(RefType RefType IntegerType):-> Ref(2,RefType IntegerType)
v(RefType IntegerType):-> Ref(3,IntegerType)
Output: 20
Filetable:
Heap:
1(IntegerType):-> 20
2(RefType IntegerType):-> Ref(1,IntegerType)
3(IntegerType):-> 30

ID: 0
Execution stack:
IntegerType v; RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
IntegerType v
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22)
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a)))
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30)
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
IntegerType v; RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
IntegerType v
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22)
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a)))
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
IntegerType v; RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
IntegerType v
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22)
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a)))
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30)
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
IntegerType v; RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
IntegerType v
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22)
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a)))
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30)
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
IntegerType v; RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
IntegerType v
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable:
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a; v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
RefType IntegerType a
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10; new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
v = 10
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 0
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22); fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
new(a, 22)
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(0,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
fork(WriteHeap(a, 30); v = 32; print(v); print(readHeap(a)))
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30); v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 1
Execution stack:
WriteHeap(a, 30)
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output:
Filetable:
Heap:
1(IntegerType):-> 22

ID: 0
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32; print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10
Filetable:
Heap:
1(IntegerType):-> 30

ID: 0
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
v = 32
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 10
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v); print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(v)
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
print(readHeap(a))
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32
Filetable:
Heap:
1(IntegerType):-> 30

ID: 1
Execution stack:
SymTable: 
a(RefType IntegerType):-> Ref(1,IntegerType)
v(IntegerType):-> 32
Output: 10 30 32 30
Filetable:
Heap:
1(IntegerType):-> 30

