BEGIN -> (-1, -1)
int -> (-1, -1)
identifier -> (2, 1)
; -> (-1, -1)
int -> (-1, -1)
identifier -> (3, 2)
; -> (-1, -1)
bool -> (-1, -1)
identifier -> (4, 3)
; -> (-1, -1)
identifier -> (5, 3)
$= -> (-1, -1)
int const -> (5, 4)
; -> (-1, -1)
identifier -> (6, 1)
$= -> (-1, -1)
int const -> (6, 5)
; -> (-1, -1)
for -> (-1, -1)
( -> (-1, -1)
identifier -> (7, 2)
$= -> (-1, -1)
int const -> (7, 6)
; -> (-1, -1)
identifier -> (7, 2)
-le -> (-1, -1)
identifier -> (7, 1)
/ -> (-1, -1)
int const -> (7, 6)
; -> (-1, -1)
identifier -> (7, 2)
$= -> (-1, -1)
identifier -> (7, 2)
int const -> (7, 7)
) -> (-1, -1)
{ -> (-1, -1)
if -> (-1, -1)
( -> (-1, -1)
identifier -> (8, 1)
% -> (-1, -1)
identifier -> (8, 2)
-eq -> (-1, -1)
int const -> (8, 8)
) -> (-1, -1)
{ -> (-1, -1)
identifier -> (9, 3)
$= -> (-1, -1)
false -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
} -> (-1, -1)
if -> (-1, -1)
( -> (-1, -1)
identifier -> (13, 3)
-eq -> (-1, -1)
int const -> (13, 4)
) -> (-1, -1)
{ -> (-1, -1)
write -> (-1, -1)
( -> (-1, -1)
str const -> (14, 9)
) -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
else -> (-1, -1)
{ -> (-1, -1)
write -> (-1, -1)
( -> (-1, -1)
str const -> (17, 10)
) -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
END -> (-1, -1)
